package gsn.utils.models.kvi;

import java.io.IOException;

import gsn.utils.models.*;
import gsn.beans.DataTypes;
import gsn.beans.StreamElement;

public class kviSegManager extends AbstractModel {

//	private static final transient Logger logger = Logger
//			.getLogger(kviSegManager.class);

	private int BUFFER_SIZE = 200;

//	private double DIST_THRESHOLD = 200; 
	
	private String tsid = new String(); 

	private StreamElement[] buffer;
	private int ptr = 0;
	int cnt=0;
	
	
	//........by tian................//
	
	modelManager segManager;
	
	//..............................//

	@Override
	public boolean initialize() {
		buffer = new StreamElement[BUFFER_SIZE];
		
		System.out.printf("Initialization\n");	
		
		return true;
	}
	

	@Override
	public StreamElement[] query(StreamElement params) {
		StreamElement[] ret = new StreamElement[1];
		StreamElement[] ret1 = new StreamElement[1];
		
		System.out.printf("got one query \n");
		
		return ret1;
	}

	@Override
	public StreamElement pushData(StreamElement se) {
				
		double val =  (Double)se.getData("val");
		double tstamp =  (Double)se.getData("tstamp");
		 
		System.out.printf("sensor value at time %d: %f %f\n",cnt++,tstamp,val);	
		
//		try {
//			segManager.kviSegLoad(0.2, val, tstamp);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}		
		
		return se;
	}

	@Override
	public void setParam(String k, String string) {
		if (k.equals("tsid")) {
			try {
				tsid = string;
			} catch (Exception e) {
			}
		}
		segManager=new modelManager(tsid); // needs modification 
		System.out.printf("setParam: %s \n",string);	
		
		//................test.....................//
//		try {
//			segManager.tpQry(15906);
//		} catch (Exception e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
//		System.out.printf("-------------- query completed! \n",string);
		//.........................................//
		
	}

}
